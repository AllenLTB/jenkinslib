@Library('jenkinslib@master')
def tools = new org.devops.tools()
def gitlab = new org.devops.gitlab()
/*
if ( "${runOpts}" == "" ) {
	branchName = branch - 'refs/heads/'
	currentBuild.description = "Trigger by ${buildUser} - ${branch}"
	gitlab.ChangeCommitStatus(projectId,commitSha,"running")
}
*/
pipeline {
    agent { node{label "scanner"} }
	options {
		timeout(time: 1, unit: 'HOURS') 
		timestamps()
		buildDiscarder(logRotator(numToKeepStr: '10'))
	}
    triggers {
        GenericTrigger(
        	genericVariables: [
                [key: "webhookEvent", value: "\$.webhookEvent", expressionType: "JSONPath", regexpFilter: "", defaultValue: ""],
                [key: "repositoryName", value: "\$.issue.fields.components.0.name", expressionType: "JSONPath", regexpFilter: "", defaultValue: ""],
            ],
        	genericRequestVariables: [
                [key: "projectKey", regexpFilter: ""]
            ],
            genericHeaderVariables: [
            ],
            token: 'jira-devops-service',
            causeString: 'Triggered on Jira',
            printContributedVariables: true,
            printPostContent: true,
            silentResponse: true
			//regexpFilterText: '$object_kind $before $after',
			//regexpFilterExpression: '^push\\s(?!0{40}).{40}\\s(?!0{40}).{40}$'
        )
    }
    stages {
        stage('Build') {
            steps{
                script{
					//创建分支
					println("hello")
					if (webhookEvent == 'jira:issue_created') {
						println(repositoryName)
					}
                }
            }
        }
    }
}
